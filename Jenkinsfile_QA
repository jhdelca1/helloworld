pipeline {
    agent any

    stages {
        stage('Get Code') {
            steps {
                // Obtener el codigo
		git 'https://github.com/jhdelca1/helloworld.git'
		bat 'dir'
		echo WORKSPACE
            }
        }
		
	stage('Unit') {
		steps {
			catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE'){
				bat '''
					set PYTHONPATH=%WORKSPACE%
					pytest --junitxml=result-unit.xml test\\unit
				'''   
				junit 'result*.xml'
			}
		}
	}
	stage('Coverage') {
		steps {
			bat '''
				coverage run --branch --source=app --omit=app\\__init__.py,app\\api.py -m pytest test\\unit
				coverage xml
			'''
			catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE'){
				cobertura coberturaReportFile: 'coverage.xml', conditionalCoverageTargets: '100,0,80', lineCoverageTargets: '100,0,90'
			}
		}
	}
		
        stage('Static') {
    		steps {
    			bat '''
    				flake8 --exit-zero --format=pylint app >flake8.out
    			'''    
    			recordIssues tools: [flake8(name: 'Flake8', pattern: 'flake8.out')], qualityGates: [[threshold: 10, type: 'TOTAL', unstable: true], [threshold: 11, type: 'TOTAL', unstable: false]]
    		    
		}
	}
        stage('Security') {
    		steps {
			// Se pone exit-zero para que no de error al encontrar algun problema, y se pare la ejecucion
    			bat '''
    				bandit --exit-zero -r . -f custom -o bandit.out --msg-template "{abspath}:{line}: [{test_id}] {msg}"
    			'''
    
    			recordIssues tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')], qualityGates: [[threshold: 1, type: 'TOTAL', unstable: true], [threshold: 2, type: 'TOTAL', unstable: false]]
    		    
		}
	}
        stage('Performance') {
    		steps {
			// Se pone exit-zero para que no de error al encontrar algun problema, y se pare la ejecucion
    			bat '''
    				//Se pone la rutadonde tengas el ejecutable de jmeter
				C:\\Jose\\MasterDEVOPS\\Master\\Software\\jmeter\\apache-jmeter-5.6.3\\bin\\jmeter -n -t test\\jmeter\\flask.jmx -f -l flask.jtl
    			'''
    			perfReport sourceDatafiles: 'flask.jtl'    			
    		    
		}
	}

    }	
}
